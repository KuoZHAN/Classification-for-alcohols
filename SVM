import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn import svm
from sklearn.metrics import confusion_matrix,ConfusionMatrixDisplay,accuracy_score
import matplotlib.pyplot as plt

iris_data=pd.read_csv('Sensing.csv')
feature_colums=['HKUST-1','Cu(BDC','Cu(BPDC)','Cu2(BDC)2(dabco)']
X=iris_data[feature_colums].values
y=iris_data['Type'].values  

from sklearn.preprocessing import LabelEncoder
le=LabelEncoder()
y=le.fit_transform(y) 

X_train, X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=0)
print(X.shape,y.shape)
print(X_train.shape, y_train.shape)
print(X_test.shape, y_test.shape)

clf = svm.SVC(kernel='linear', C=1).fit(X_train, y_train)
y_pred=clf.predict(X_test)
cm=confusion_matrix(y_true=y_test,y_pred=y_pred,labels=[0,1,2,3,4,5],normalize='true')
print( clf.score(X_test, y_test) )
print(cm)
disp=ConfusionMatrixDisplay(confusion_matrix=cm)
disp.plot()
plt.show()
accuracy=accuracy_score(y_test,y_pred)*100
print('accuracy='+str(round(accuracy,2))+'%')
